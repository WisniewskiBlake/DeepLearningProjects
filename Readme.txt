Collection of neural networks I have built to solve various problems. This repository uses Anaconda, Spyder, NumPy, Tensorflow, Keras, Jupyter, and Pandas.

The ANN (Artificial Neural Network) takes data from 10,000 bank customers that includes location, age, name, credit score, gender, balance, and tenure. From these variables, I train the ANN to figure out what is causing customers to leave. First, the data is broken up into independant and dependant variables. All catagorical data such as gender and location are converted into 0s and 1s. The data is then seperated into a training set and a test set. The training set is 8,000 observations, and the performance will be tested on 2,000 observations. My ANN uses the Keras library which builds the Deep Neural Network based on Tensorflow. I begin by initializing my DeepLearning model by defining it as a sequence of layers. I name the neural network "classifier" as this is a classification problem and assign it to an object of the Sequential class. After this I use the Dense function to randomly initialise weights of variables to small numbers close to 0. I do this for each of the hidden layers. Forward-propogation is then used to assign weights to each variable; a predicted value is then generated. I compare the predicted to actual and measure the error generated. The error measured is back-propogated and weights are updated. I use Reinforcement Learning opposed to Batch Learning and update the weights after each observation. Once this is completed an epoch is created. I then redo the process to create more epochs.
